{"version":3,"sources":["webpack://image-dnd/./src/components/table/index.js","webpack://image-dnd/./src/pages/editor/index.js"],"names":["ImageLoader","constructor","event","preventDefault","dropArea","this","subElements","classList","add","remove","files","dataTransfer","handleFiles","inputFile","document","createElement","type","accept","addEventListener","async","hidden","body","appendChild","click","filesDone","filedToDo","render","wrapper","innerHTML","getTemplate","element","firstElementChild","getSubElements","initEventListeners","uploadImage","forEach","eventName","preventDefaults","highlight","unhighlight","onUploadImage","handleDrop","removeEventListeners","removeEventListener","file","previewFile","url","URL","formData","FormData","responce","append","fetch","method","err","console","error","message","ok","progressDone","statusText","json","gallery","reader","FileReader","readAsDataURL","onloadend","img","src","result","initializeProgress","numFiles","progressBar","value","elements","querySelectorAll","item","dataset","log","destroy","Page","initComponents","renderComponents","imageLoader","components","Object","keys","component","root","values"],"mappings":"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","file":"editor-index-js-856.js","sourcesContent":["\nexport default class ImageLoader {\n\n    subElements = {};\n\n\n    preventDefaults = (event) => {\n        event.preventDefault();\n    }\n\n    highlight = () => {\n        const { dropArea } = this.subElements;\n\n        dropArea.classList.add('highlight');\n    }\n\n    unhighlight = () => {\n        const { dropArea } = this.subElements;\n        dropArea.classList.remove('highlight')\n    }\n\n    handleDrop = (event) => {\n        const dt = event.dataTransfer;\n        const files = dt.files;\n        //  files это не массив, а FileList\n        this.handleFiles(files);\n        // реализация handleFiles, нам нужно преобразовать FileList в массив, чтобы более легко было его итерировать\n    }\n\n\n    onUploadImage = () => {\n        const inputFile = document.createElement('input');\n    \n        inputFile.type = 'file';\n        inputFile.accept = 'image/*';\n    \n        inputFile.addEventListener('change', async () => {\n           const files = inputFile.files;\n        //    работает с FileList\n          if (files) {\n            this.handleFiles(files);\n\n        // сетевые запросы, сервера нет (пока)\n        // this.initializeProgress(files.length)\n        // [...files].forEach((file) => this.uploadFile(file));\n            \n            inputFile.remove();\n          }\n        });\n    \n        // для корректной работы в IE\n        inputFile.hidden = true;\n        document.body.appendChild(inputFile);\n        inputFile.click();\n      }\n\n\n\n    constructor() {\n        this.filesDone = 0;\n        this.filedToDo = 0;\n        this.render();\n    }\n\n    render() {\n        const wrapper = document.createElement('div');\n\n        wrapper.innerHTML = this.getTemplate();\n        this.element = wrapper.firstElementChild;\n\n        this.subElements = this.getSubElements();\n        this.initEventListeners();\n    }\n\n\n    initEventListeners() {\n        const { dropArea, uploadImage } = this.subElements;\n\n        ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {\n            dropArea.addEventListener(eventName, this.preventDefaults)\n        });\n\n        ['dragenter', 'dragover'].forEach(eventName => {\n            dropArea.addEventListener(eventName, this.highlight)\n        });\n\n        ['dragleave', 'drop'].forEach(eventName => {\n            dropArea.addEventListener(eventName, this.unhighlight)\n        });\n\n        uploadImage.addEventListener('click', this.onUploadImage);\n        dropArea.addEventListener('drop', this.handleDrop);\n    }\n\n    removeEventListeners() {\n        ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {\n            document.removeEventListener(eventName, this.preventDefaults);\n        })\n\n        ['dragenter', 'dragover'].forEach(eventName => {\n            dropArea.removeEventListener(eventName, this.highlight)\n        });\n\n        ['dragleave', 'drop'].forEach(eventName => {\n            dropArea.removeEventListener(eventName, this.unhighlight)\n        });\n\n    }\n\n    handleFiles(files) {\n        ([...files]).forEach((file) => this.previewFile(file));\n\n        // сетевые запросы, сервера нет (пока)\n        // this.initializeProgress(files.length)\n        // [...files].forEach((file) => this.uploadFile(file));\n    }\n\n    async uploadFile(file) {\n        const url = new URL();\n        const formData = new FormData();\n\n        formData.append('file', file);\n        let responce;\n\n        try {\n            responce = await fetch(url, {\n                method: 'POST',\n                body: formData\n            })\n        } catch (err) {\n            console.error(err.message);\n        }\n\n        if (!responce.ok) {\n            console.error(responce.statusText)\n        } else {\n            this.progressDone();\n        }\n\n        return await responce.json();\n\n    }\n\n    previewFile(file) {\n        const { gallery } = this.subElements;\n        const reader = new FileReader();\n       \n        reader.readAsDataURL(file);\n        reader.onloadend = () => {\n            const img = document.createElement('img');\n            img.src = reader.result;\n            gallery.appendChild(img);\n        }\n    }\n\n    // строка загрузки, серверная часть\n    initializeProgress(numFiles) {\n        const { progressBar } = this.subElements;\n        progressBar.value = 0;\n        this.filedToDo = numFiles;\n        this.filesDone = 0\n    }\n\n    progressDone() {\n        const { progressBar } = this.subElements;\n        this.filesDone++;\n        progressBar.value = this.filesDone / this.filedToDo * 100;\n\n    }\n    //\n\n\n    getSubElements() {\n        const elements = this.element.querySelectorAll('[data-element]')\n        for (const item of elements) {\n            this.subElements[item.dataset.element] = item;\n        }\n        console.log(this.subElements);\n        return this.subElements;\n    }\n\n\n    getTemplate() {\n        return `\n            <div class=\"container\" data-element=\"imgaeLoader\">\n            <div class=\"drop-area\" id=\"drop-area\" data-element='dropArea'>\n            <form class=\"my-form\">\n              <p>Загрузите изображения с помощью диалога выбора файлов или перетащив нужные изображения в выделенную область</p>\n              <button type=\"button\" class=\"button\" name=\"uploadImage\" data-element=\"uploadImage\" class=\"button-primary-outline fit-content\"><span>Выбрать изображения</span></button>\n            </form>\n            <!-- <<progress id=\"progress-bar\" max=100 value=0 data-element='progressBar'></progress> -->\n            <div id=\"gallery\" class=\"gallery\" data-element='gallery'></div>\n          </div>\n            </div>`\n    }\n\n\n\n    remove() {\n        if (this.element) {\n            this.element.remove();\n        }\n    }\n\n    destroy() {\n        this.remove();\n        this.element = null;\n        this.subElements = null;\n    }\n\n\n}","import ImageLoader from \"../../components/table\";\n\n\n\n\nexport default class Page {\n    subElements = {};\n    components = {};\n\n\n    render() {\n\n        const element = document.createElement('div');\n        element.innerHTML = this.getTemplate();\n\n        this.element = element.firstElementChild;\n\n        this.subElements = this.getSubElements();\n        this.initComponents();\n        this.renderComponents();\n\n        return this.element;\n    }\n\n\n    initComponents() {\n        const imageLoader = new ImageLoader();\n\n        this.components = {\n            imageLoader,\n        }\n    }\n\n    renderComponents() {\n        Object.keys(this.components).forEach(component => {\n            console.log(component);\n            const root = this.subElements[component];\n            const { element } = this.components[component];\n            root.append(element);\n        })\n    }\n\n\n\n    getSubElements() {\n        const elements = this.element.querySelectorAll('[data-element]')\n        for (const item of elements) {\n            this.subElements[item.dataset.element] = item;\n        }\n        return this.subElements;\n    }\n\n    removeEventListeners() {\n        this.removeEventListeners();\n    }\n\n    remove() {\n        if (this.element) {\n            this.element.remove()\n        }\n    }\n\n    destroy() {\n        this.remove();\n        this.element = null;\n        this.subElements = null;\n\n\n        for (const component of Object.values(this.components)) {\n            component.destroy();\n        }\n    }\n\n\n    getTemplate() {\n        return `\n        <div>\n        <div class=\"table\" data-element=\"imageLoader\">\n\n        </div>\n        </div>\n        `\n    }\n}"],"sourceRoot":""}