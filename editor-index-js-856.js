"use strict";(self.webpackChunkimage_dnd=self.webpackChunkimage_dnd||[]).push([[856],{106:(e,t,s)=>{function n(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}s.r(t),s.d(t,{default:()=>o});class r{constructor(){n(this,"subElements",{}),n(this,"preventDefaults",e=>{e.preventDefault()}),n(this,"highlight",()=>{const{dropArea:e}=this.subElements;e.classList.add("highlight")}),n(this,"unhighlight",()=>{const{dropArea:e}=this.subElements;e.classList.remove("highlight")}),n(this,"handleDrop",e=>{const t=e.dataTransfer.files;this.handleFiles(t)}),n(this,"onUploadImage",()=>{const e=document.createElement("input");e.type="file",e.accept="image/*",e.addEventListener("change",async()=>{const t=e.files;t&&(this.handleFiles(t),e.remove())}),e.hidden=!0,document.body.appendChild(e),e.click()}),this.filesDone=0,this.filedToDo=0,this.render()}render(){const e=document.createElement("div");e.innerHTML=this.getTemplate(),this.element=e.firstElementChild,this.subElements=this.getSubElements(),this.initEventListeners()}initEventListeners(){const{dropArea:e,uploadImage:t}=this.subElements;["dragenter","dragover","dragleave","drop"].forEach(t=>{e.addEventListener(t,this.preventDefaults)}),["dragenter","dragover"].forEach(t=>{e.addEventListener(t,this.highlight)}),["dragleave","drop"].forEach(t=>{e.addEventListener(t,this.unhighlight)}),t.addEventListener("click",this.onUploadImage),e.addEventListener("drop",this.handleDrop)}removeEventListeners(){["dragenter","dragover","dragleave","drop"].forEach(e=>{document.removeEventListener(e,this.preventDefaults)}).dragover.forEach(e=>{dropArea.removeEventListener(e,this.highlight)}),["dragleave","drop"].forEach(e=>{dropArea.removeEventListener(e,this.unhighlight)})}handleFiles(e){[...e].forEach(e=>this.previewFile(e))}async uploadFile(e){const t=new URL,s=new FormData;let n;s.append("file",e);try{n=await fetch(t,{method:"POST",body:s})}catch(e){console.error(e.message)}return n.ok?this.progressDone():console.error(n.statusText),await n.json()}previewFile(e){const{gallery:t}=this.subElements,s=new FileReader;s.readAsDataURL(e),s.onloadend=()=>{const e=document.createElement("img");e.src=s.result,t.appendChild(e)}}initializeProgress(e){const{progressBar:t}=this.subElements;t.value=0,this.filedToDo=e,this.filesDone=0}progressDone(){const{progressBar:e}=this.subElements;this.filesDone++,e.value=this.filesDone/this.filedToDo*100}getSubElements(){const e=this.element.querySelectorAll("[data-element]");for(const t of e)this.subElements[t.dataset.element]=t;return console.log(this.subElements),this.subElements}getTemplate(){return'\n            <div class="container" data-element="imgaeLoader">\n            <div class="drop-area" id="drop-area" data-element=\'dropArea\'>\n            <form class="my-form">\n              <p>Загрузите изображения с помощью диалога выбора файлов или перетащив нужные изображения в выделенную область</p>\n              <button type="button" class="button" name="uploadImage" data-element="uploadImage" class="button-primary-outline fit-content"><span>Выбрать изображения</span></button>\n            </form>\n            \x3c!-- <<progress id="progress-bar" max=100 value=0 data-element=\'progressBar\'></progress> --\x3e\n            <div id="gallery" class="gallery" data-element=\'gallery\'></div>\n          </div>\n            </div>'}remove(){this.element&&this.element.remove()}destroy(){this.remove(),this.element=null,this.subElements=null}}function i(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}class o{constructor(){i(this,"subElements",{}),i(this,"components",{})}render(){const e=document.createElement("div");return e.innerHTML=this.getTemplate(),this.element=e.firstElementChild,this.subElements=this.getSubElements(),this.initComponents(),this.renderComponents(),this.element}initComponents(){const e=new r;this.components={imageLoader:e}}renderComponents(){Object.keys(this.components).forEach(e=>{console.log(e);const t=this.subElements[e],{element:s}=this.components[e];t.append(s)})}getSubElements(){const e=this.element.querySelectorAll("[data-element]");for(const t of e)this.subElements[t.dataset.element]=t;return this.subElements}removeEventListeners(){this.removeEventListeners()}remove(){this.element&&this.element.remove()}destroy(){this.remove(),this.element=null,this.subElements=null;for(const e of Object.values(this.components))e.destroy()}getTemplate(){return'\n        <div>\n        <div class="table" data-element="imageLoader">\n\n        </div>\n        </div>\n        '}}}}]);
//# sourceMappingURL=editor-index-js-856.js.map